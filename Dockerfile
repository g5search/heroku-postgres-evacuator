FROM debian:jessie
MAINTAINER G5 Engineering <engineering@getg5.com>

RUN apt-get update
RUN apt-get install -y wget curl ruby

# Guidelines for postgresql version compatibility
# - use the same major version (9.x) across pg_dump, pg_restore and target postgres server
# - minor version is constrained by the target db server
#     - a newer pg_restore (e.g. 9.6) cannot load a dump into an older postgres server (e.g. 9.5)
#     - an older pg_restore (e.g. 9.5) is generally compatible with a newer postgres server (e.g. 9.6),
#       but see the note on patch levels
# - minor version is also constrained by the dump file
#     - an older pg_restore cannot load a dump made by a newer version of pg_dump
#     - every pg_restore version is backwards compatible with dump files made by postgres >= 7.0,
#       so as long as your pg_restore isn't running far behind your source postgres version,
#       you'll be fine
# - patch level is constrained by the pg_dump version used to originally create the dump file
#     - the latest patch-level is guaranteed to be compatible with dump files generated by the same
#       major.minor version (regardless of patch level pg_dump)
#     - the reverse is *not* true, and we have run into at least one scenario where dump files
#       generated by a newly patched pg_dump were not compatible with an older pg_restore, even though
#       major.minor versions matched
#     - therefore, always try to use the most recent patch level available
#
# The tl;dr is that right now, installing the latest patch level of postgresql-client-9.5 satisfies
# all of our needs, but this may change if we need to migrate heroku apps that use postgres 9.6.
RUN echo "deb http://apt.postgresql.org/pub/repos/apt/ jessie-pgdg main" > /etc/apt/sources.list.d/pgdg.list &&\
    wget --quiet -O - https://www.postgresql.org/media/keys/ACCC4CF8.asc | apt-key add - &&\
    apt-get update &&\
    apt-get install -y postgresql-client-9.5

RUN echo "deb http://toolbelt.heroku.com/ubuntu ./" > /etc/apt/sources.list.d/heroku.list &&\
    wget -O- https://toolbelt.heroku.com/apt/release.key | apt-key add - &&\
    apt-get update &&\
    apt-get install -y heroku-toolbelt

# Installs a bunch of the plugins that apparently aren't in the base
RUN heroku version

# Email can be discovered with `heroku auth:whoami`, token with `heroku auth:token`
ENV EMAIL="" \
    HEROKU_TOKEN="" \
    APP_NAME="" \
    PGHOST="" \
    PGPORT="5432" \
    PGUSER="" \
    PGPASSWORD="" \
    PGDATABASE="" \
    AWS_REGION="" \
    AWS_S3_BUCKET="" \
    AWS_S3_KEYBASE="" \
    AWS_ACCESS_KEY_ID="" \
    AWS_SECRET_ACCESS_KEY=""

RUN gem install --no-document bundler
COPY Gemfile Gemfile.lock /
RUN bundle install

COPY *.rb /
RUN chmod a+x validate_general_vars.rb validate_aws_vars.rb prep_creds.rb import.rb move.rb rollback.rb

COPY *.sh /
RUN chmod a+x import.sh move.sh rollback.sh

CMD /import.sh
